import unittest
from cli import compare_version_release

class TestCompareVersionRelease(unittest.TestCase):
    def test_compare_version_release(self):
        test_cases = [
            # Случаи сравнения версий и релизов
            ("1.0-1", "1.0-1", 0),          # Те же версии и релизы
            ("1-1", "1-1", 0),              # Те же версии и релизы

            ("1.0-1", "1.1-1", -1),         # Меньшая версия первого пакета
            ("1.1-1", "1.0-1", 1),          # Большая версия первого пакета
            ("1.0.1-1", "1.0-1", 1),        # Дополнительный патч в первом пакете
            ("1.0-1", "1.0.1-1", -1),       # Дополнительный патч во втором пакете
            ("1.0.1-1", "1.0.2-1", -1),     # Патчи в обоих пакетах
            ("1.0.2-1", "1.0.1-1", 1),      # Патчи в обоих пакетах (наоборот)
            ("2.0-1", "1.9.9-1", 1),        # Большая версия, но меньший мажорный номер
            ("1.9.9-1", "2.0-1", -1),       # Меньшая версия, но больший мажорный номер
            ("1.10-1", "1.9-1", 1),         # Большая версия, но меньший минорный номер
            ("1.9-1", "1.10-1", -1),        # Меньшая версия, но больший минорный номер
            ("1.0-1", "1-1", 0),            # Одна версия с точкой, другая без нее
            ("1-1", "1.0-1", 0),            # Одна версия без точки, другая с ней
            ("1_alpha-1", "1_beta-1", -1),  # Сравнение буквенных символов
            ("1_beta-1", "1_alpha-1", 1),   # Сравнение буквенных символов (наоборот)
            ("1.0.0.0-1", "1-1", 0),        # Дополнительные нули в номере версии
            ("1-1", "1.0.0.0-1", 0),        # Дополнительные нули в номере версии (наоборот)

            ("1-1", "1-2", -1),             # Меньший релиз первого пакета
            ("1-2", "1-1", 1),              # Больший релиз первого пакета
            ("1-1", "1.1-1", -1),           # Дополнительная версия во втором пакете
            ("1.1-1", "1-1", 1),            # Дополнительная версия в первом пакете
            ("1.1-1", "1.2-1", -1),         # Дополнительные версии в обоих пакетах
            ("1.2-1", "1.1-1", 1),          # Дополнительные версии в обоих пакетах (наоборот)
            ("1-1", "1a-1", -1),            # Релиз с альфа символом
            ("1a-1", "1-1", 1),             # Релиз с альфа символом (наоборот)
            ("1a-1", "1b-1", -1),           # Сравнение релизов с альфа символами
            ("1b-1", "1a-1", 1),            # Сравнение релизов с альфа символами (наоборот)
            ("1-1", "1_beta-1", -1),        # Сравнение версии с релизом
            ("1_beta-1", "1-1", 1),         # Сравнение версии с релизом (наоборот)

            # Добавленные случаи сравнения версий и релизов
            ("6.1.7.1-alt1.2", "6.1.7.1-alt1.1", 1),   # Сравнение релизов для gem-actioncable
            ("1.46.0-alt2", "1.46.0-alt1.p10.1", 1)  # Сравнение релизов для NetworkManager
        ]

        for version1, version2, expected_result in test_cases:
            with self.subTest(version1=version1, version2=version2):
                result = compare_version_release(version1, version2)
                self.assertEqual(result, expected_result)

if __name__ == '__main__':
    unittest.main()